<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridViewTextBoxColumn5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>